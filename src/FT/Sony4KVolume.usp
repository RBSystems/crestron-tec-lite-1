/*******************************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
*******************************************************************************************/
/*
System Name: Sony 4K Volume
System Number: 1.0
Programmer: Dan Clegg
Comments: This Crestron Simpl+ Module is to track and enable changing of CEC-connected 4K display audio
*/

/*******************************************************************************************
  Compiler Directives
*******************************************************************************************/
// #ENABLE_DYNAMIC
#SYMBOL_NAME "Sony 4K Volume"
// #HINT ""
// #DEFINE_CONSTANT
#CATEGORY "46" "Sony Displays"

#DEFINE_CONSTANT	BIGGESTSIZE	65534
#DEFINE_CONSTANT	INITIALVALUE 0
#DEFINE_CONSTANT	NEWLINE	"\n"

/*******************************************************************************************
  DIGITAL, ANALOG and SERIAL INPUTS and OUTPUTS
  (Uncomment and declare inputs and outputs as needed)
*******************************************************************************************/
DIGITAL_INPUT Volume_Is_Changing;
ANALOG_INPUT Volume_level_fb,Desired_Volume;
// STRING_INPUT 
// BUFFER_INPUT 

DIGITAL_OUTPUT Change_Volume, Volume_Up, Volume_Down;
ANALOG_OUTPUT Volume_level,SetVolumeTo;

/*******************************************************************************************
  Global Variables
  (Uncomment and declare global variables as needed)
  Note:  Be sure to initialize all declared STRING variables as needed
         For example, in Function Main: myString = "";
*******************************************************************************************/
INTEGER VOLUME;
// LONG_INTEGER
// SIGNED_INTEGER
// SIGNED_LONG_INTEGER
// STRING

/*******************************************************************************************
  Functions
  (Add any additional functions here)
  Note:  Functions must be physically placed before the location in
         the code that calls them.
*******************************************************************************************/

Function SetVolume(INTEGER val){
	INTEGER difference, abs_diff, increase, counter;
	increase = 0;
	difference = Volume_level_fb - val;
	abs_diff = ABS(difference);
	
	if (difference > 0)
	{
		increase = 1;
	}
	else if (difference = 0)
	{
		Change_Volume = 0;
		return;
	}

    for (counter = 0 to abs_diff)
	{
		if (increase = 1)
		{
			Volume_Up = 1;
			Wait(7);
			Volume_Up = 0;
			Volume_level = Volume_level + 1;	
		}
		else
		{
         	Volume_Down = 1;
			Wait(7);
			Volume_Down = 0;
			Volume_level = Volume_level - 1;
		}
		counter = counter + 1; 
	}
	Volume_level = val;
	Change_Volume = 0;
}

/*******************************************************************************************
  Event Handlers
  (Uncomment and declare additional event handlers as needed)
*******************************************************************************************/

CHANGE Desired_Volume
{
	Change_Volume = 1;
	SetVolume(Desired_Volume);
}

/*******************************************************************************************
  Main()
  Uncomment and place one-time startup code here
  (This code will get called when the system starts up)
*******************************************************************************************/

Function Main()
{   
	VOLUME = INITIALVALUE; 
	WaitForInitializationComplete();
	Change_Volume = 0;
}
